                              ##### TODO LIST #####

______________________________________________________________________________________
COMPLETED:

Add server stuff for creating a player on connection. ✅
Probably need to use cookies/local storage for user identification rather than IP? ✅
Display name entry page before host/join page. ✅
Deal with beginning of game - showing if you are resistance or not. ✅
Add Styled components ✅
Confirm allegiance and monitor confirmations ✅
Refactor game.ts into multiple classes. (Nomination round, character selection round etc.) ✅
Replace characters, allegiance, event types etc. with string enums ✅
Replace string union types with enums ✅
Add alias for @shared, @client and @server ✅
Replace event types with EventByName<'eventName'> ✅
Types for RoundData ✅
Implement NOMINATION and VOTING ✅
Implement MISSIONS ✅
Prevent homescreen from flashing up before changing to latest screen? ✅
Show mission progress ✅

______________________________________________________________________________________
FEATURES:

Add quit game functionality in lobby/elsewhere
Add voting results page - show who voted for what.
Add endgame pages
Remove hostID
Character selection
Characters

______________________________________________________________________________________
BUGS:

Small screens probably cannot handle large games. (Allow scrolling?)
Small screens cannot fully show the nomination vote page with long names.
No feedback on submitting mission choice.
No handling of 'disconnected' event in server
Opening two tabs allows one user to have two websocket connections open? - Close one websocket on opening another.
Probably need to close/clear games that haven't been used in a while.

______________________________________________________________________________________
TECH DEBT:

Mirror game stage refactor changes in the front-end
Encapsulate websocket interactions within a service
Refactor wsEventHandler in server (receives array, sends object?)
BEST PRACTICE: replace ports with enums
Decide what to do with enum in shared.
  - Cannot be const enum, because cannot be used as type argument.
  - If happy to use regular enum, need to set up webpack to move it?
Extract Mission into separate class.
  Instead of:  lobby -> character -> nominate -> vote -> result -> nominate -> vote -> result
  Use: lobby - character -> Mission 1 -> Mission 2 -> Mission 3 etc.
                            -nominate    -nominate    -nominate
                            -vote        -vote        -vote
                            -result      -result      -result
                            -mission     -mission     -mission
                            -missionRes  -missionRes  -missionRes